plugins {
    id 'com.gtnewhorizons.retrofuturagradle' version '1.+'
}

repositories {
    maven {
        name 'Overmind forge repo mirror'
        url 'https://gregtech.overminddl1.com/'
        mavenContent {
            excludeGroup("net.minecraftforge")
        }
    }
    maven {
        name = "GTNH Maven"
        url = "http://jenkins.usrv.eu:8081/nexus/content/groups/public/"
        allowInsecureProtocol = true
    }
    flatDir{dirs("lib")}
}

java.targetCompatibility(JavaVersion.VERSION_1_8)
version = project.mod_version
group= project.maven_group + "." + project.mod_id
archivesBaseName = project.archives_base_name

minecraft {
    //setMainLwjglVersion(3)
    version(project.minecraft_version)
    setUsername("FreddyFazbear")
    injectMissingGenerics.set(true)
}

dependencies {
    implementation ("mcp.mobius.waila:Waila:1.5.11-RC2-NONEI_1.7.10:dev")
    implementation ("codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev")
    implementation ("codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev")
    implementation ("codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev")
    compileOnly ("lib:Better With Mods 1.7.10 0.6.2 Beta-deobf")
    runtimeOnly ("lib:Better With Mods 1.7.10 0.6.2 Beta")
    compileOnly("lib:CraftTweaker-1.7.10-3.1.0-legacy-deobf")
    runtimeOnly("lib:CraftTweaker-1.7.10-3.1.0-legacy")
    compileOnly("lib:SignPicture-1.7.10-2.8.0-universal-deobf")
}

processResources {
    setDuplicatesStrategy(DuplicatesStrategy.INCLUDE)
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property "mod_id", project.mod_id
    inputs.property "mod_name", project.archives_base_name

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version, 'mod_id': project.mod_id, 'mod_name': project.archives_base_name
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

if (!(coremod == null || coremod.isEmpty())) {
    apply from: "coremod.gradle"
}
apply from: "mixin.gradle"